-- Combined Roblox GUI Script with Tabs
-- Draggable, mobile/PC compatible, 5 tabs with 5 placeholder buttons each

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- GUILib functionality embedded
local GUILib = {}

-- Utility function to create a draggable frame
function GUILib:MakeDraggable(frame)
	local dragging = false
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		local newPos = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
		frame.Position = newPos
	end

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	frame.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

-- Utility function to create a tab
function GUILib:CreateTab(parent, tabName, contentFrame, tabs, activeTab)
	local tabButton = Instance.new("TextButton")
	tabButton.Size = UDim2.new(0.2, -5, 0, 30)
	tabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	tabButton.Text = tabName
	tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
	tabButton.Font = Enum.Font.SourceSansPro
	tabButton.TextScaled = true
	tabButton.BorderSizePixel = 0
	tabButton.Parent = parent

	local tabCorner = Instance.new("UICorner")
	tabCorner.CornerRadius = UDim.new(0, 5)
	tabCorner.Parent = tabButton

	local tabContent = Instance.new("ScrollingFrame")
	tabContent.Size = UDim2.new(0.9, 0, 0.7, -60)
	tabContent.Position = UDim2.new(0.05, 0, 0, 80)
	tabContent.BackgroundTransparency = 1
	tabContent.ScrollBarThickness = 5
	tabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
	tabContent.Visible = false
	tabContent.Name = tabName .. "Content"
	tabContent.Parent = contentFrame

	local uiListLayout = Instance.new("UIListLayout")
	uiListLayout.Padding = UDim.new(0, 10)
	uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	uiListLayout.Parent = tabContent

	-- Create 5 placeholder buttons per tab
	for i = 1, 5 do
		local button = Instance.new("TextButton")
		button.Size = UDim2.new(0.9, 0, 0, 30)
		button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		button.Text = "Button " .. i
		button.TextColor3 = Color3.fromRGB(255, 255, 255)
		button.Font = Enum.Font.SourceSansPro
		button.TextScaled = true
		button.BorderSizePixel = 0
		button.Parent = tabContent

		local buttonCorner = Instance.new("UICorner")
		buttonCorner.CornerRadius = UDim.new(0, 5)
		buttonCorner.Parent = button
	end

	-- Update CanvasSize dynamically
	uiListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		tabContent.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y)
	end)

	-- Tab switching logic
	tabButton.MouseButton1Click:Connect(function()
		for _, tab in pairs(tabs) do
			tab.Content.Visible = false
			tab.Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		end
		tabContent.Visible = true
		tabButton.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
		activeTab.Value = tabName
	end)

	return {Button = tabButton, Content = tabContent}
end

-- Utility function to create a smooth animation
function GUILib:Tween(object, properties, duration)
	local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
	local tween = TweenService:Create(object, tweenInfo, properties)
	tween:Play()
end

-- Main GUI setup
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ModernGUI"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false

-- Create Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 400)
mainFrame.Position = UDim2.new(0.5, -150, 0.5, -200)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

-- Add UIGradient for modern look
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
})
gradient.Rotation = 45
gradient.Parent = mainFrame

-- Add UICorner for rounded edges
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = mainFrame

-- Add shadow
local shadow = Instance.new("ImageLabel")
shadow.Size = UDim2.new(1, 10, 1, 10)
shadow.Position = UDim2.new(0, -5, 0, -5)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.8
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(10, 10, 118, 118)
shadow.Parent = mainFrame

-- Make main frame draggable
GUILib:MakeDraggable(mainFrame)

-- Create Title Bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(0.8, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "Modern GUI"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.SourceSansPro
titleLabel.Parent = titleBar

-- Create Close Button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(0.9, -5, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.SourceSansPro
closeButton.TextScaled = true
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 5)
closeCorner.Parent = closeButton

-- Create Open Button
local openButton = Instance.new("TextButton")
openButton.Size = UDim2.new(0, 50, 0, 50)
openButton.Position = UDim2.new(0, 10, 0, 10)
openButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
openButton.Text = "Open"
openButton.TextColor3 = Color3.fromRGB(255, 255, 255)
openButton.Font = Enum.Font.SourceSansPro
openButton.TextScaled = true
openButton.Parent = screenGui

local openCorner = Instance.new("UICorner")
openCorner.CornerRadius = UDim.new(0, 25)
openCorner.Parent = openButton

-- Create Tab Bar
local tabBar = Instance.new("Frame")
tabBar.Size = UDim2.new(1, 0, 0, 40)
tabBar.Position = UDim2.new(0, 0, 0, 40)
tabBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
tabBar.BorderSizePixel = 0
tabBar.Parent = mainFrame

local tabLayout = Instance.new("UIListLayout")
tabLayout.FillDirection = Enum.FillDirection.Horizontal
tabLayout.Padding = UDim.new(0, 5)
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Parent = tabBar

-- Create Content Frame for Tabs
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -80)
contentFrame.Position = UDim2.new(0, 0, 0, 80)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

-- Track active tab
local activeTab = Instance.new("StringValue")
activeTab.Value = "Player"

-- Create Tabs
local tabs = {}
local tabNames = {"Player", "Steal", "Helper", "Automate", "Misc"}

for i, tabName in ipairs(tabNames) do
	local tab = GUILib:CreateTab(tabBar, tabName, contentFrame, tabs, activeTab)
	tabs[tabName] = tab
	if tabName == "Player" then
		tab.Content.Visible = true
		tab.Button.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
	end
end

-- Open/Close functionality
local isOpen = false
local function toggleGUI()
	isOpen = not isOpen
	mainFrame.Visible = isOpen
	openButton.Visible = not isOpen
	GUILib:Tween(mainFrame, {Position = isOpen and UDim2.new(0.5, -150, 0.5, -200) or UDim2.new(0.5, -150, 0.5, 200)}, 0.3)
end

closeButton.MouseButton1Click:Connect(toggleGUI)
openButton.MouseButton1Click:Connect(toggleGUI)
